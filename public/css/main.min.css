@font-face{font-family:"Montserrat";font-display:swap;src:url(../font/Montserrat-Regular.woff) format("woff"),url(../font/Montserrat-Regular.woff2) format("woff2");font-weight:400;font-style:normal}@font-face{font-family:"Montserrat";font-display:swap;src:url(../font/Montserrat-Medium.woff) format("woff"),url(../font/Montserrat-Medium.woff2) format("woff2");font-weight:500;font-style:normal}@font-face{font-family:"Montserrat";font-display:swap;src:url(../font/Montserrat-SemiBold.woff) format("woff"),url(../font/Montserrat-SemiBold.woff2) format("woff2");font-weight:600;font-style:normal}@font-face{font-family:"Montserrat";font-display:swap;src:url(../font/Montserrat-Bold.woff) format("woff"),url(../font/Montserrat-Bold.woff2) format("woff2");font-weight:700;font-style:bold}html{line-height:1.15;-webkit-text-size-adjust:100%;-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;padding:0}body{margin:0;font:500 22px/30px "Montserrat",Arial,Helvetica,sans-serif;color:#2a2a2a;overflow-x:hidden}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;max-width:100%;height:auto;vertical-align:top}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}.visually-hidden:not(:focus):not(:active){position:absolute;width:1px;height:1px;margin:-1px;border:0;padding:0;white-space:nowrap;-webkit-clip-path:inset(100%);clip-path:inset(100%);clip:rect(0 0 0 0);overflow:hidden}.button-reset{background:0 0;border:0;cursor:pointer;text-decoration:none}.container{max-width:1550px;margin:0 auto;padding:0 15px}.blocks{display:grid;grid-template-columns:repeat(3,minmax(300px,493px));grid-template-rows:repeat(2,493px);row-gap:20px;-webkit-column-gap:20px;-moz-column-gap:20px;column-gap:20px}.blocks__item-wrap{padding:0 50px 40px;color:#fff}.blocks__item-wrap--red{background:#e84142}.blocks__item-wrap--grey{background:#d0d2d3;color:#262626}.blocks__item-wrap--yellow{background:#ffad28;color:#262626}.blocks__item-wrap--black{background:#262626}.blocks__item-wrap--pink{background:#e06ae9}.blocks__item-wrap--accent{background:#7a18d5}.blocks__item{display:inline-block;text-decoration:none;height:100%;width:100%;color:inherit}.blocks__image-wrap,.blocks__item-inner{display:-webkit-box;display:-ms-flexbox;display:flex;height:100%}.blocks__item-inner{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.blocks__image-wrap{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:30px 0}.blocks__title{margin:0;font-size:calc(30px + 10*((100vw - 320px)/1230));font-weight:600}.ecosystem{padding-top:170px;padding-bottom:230px}.header{padding:60px 0;position:relative}.header__wrap{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__logo-link{margin-right:30px}.nav-header-burger{display:none}.nav-header-burger.active span{opacity:0}.nav-header-burger.active::before{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);top:14px}.nav-header-burger.active::after{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);top:14px}.nav-header__list,.nav-header__submenu-list{list-style:none;margin:0;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex}.nav-header__list li+li{margin-left:100px}.nav-header__list li a{color:#7a18d5;text-decoration:none;text-transform:capitalize;font-weight:600;font-size:calc(20px + 5*((100vw - 320px)/1230));-webkit-transition:color .2s ease-in;-o-transition:color .2s ease-in;transition:color .2s ease-in;white-space:nowrap}.nav-header__list li a:hover,.nav-header__submenu-list:hover .has-submenu{color:#c1a9e0}.nav-header__list li a:hover+.nav-header__submenu-list,.nav-header__submenu-list:hover{visibility:visible;opacity:1}.nav-header__list li,.nav-header__submenu-list li{position:relative}.nav-header__submenu-list{background:#7a18d5;visibility:hidden;position:absolute;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:25px;min-width:220px;top:45px;opacity:0;-webkit-transition:visibility .3s,opacity .3s;-o-transition:visibility .3s,opacity .3s;transition:visibility .3s,opacity .3s}.nav-header__submenu-list li+li{margin-left:0;margin-top:20px}.nav-header__submenu-list li::after{background:#fff;content:"";position:absolute;width:0;height:3px;left:50%;bottom:-10px;-webkit-transition:all .1s ease;-o-transition:all .1s ease;transition:all .1s ease}.nav-header__submenu-list li:hover::after{width:100%;left:0}.nav-header__submenu-list li:hover a{color:#fff}.nav-header__submenu-list li a{color:#fff;display:inline-block;white-space:nowrap;width:100%}.page-title{font:600 calc(28px + 34*((100vw - 320px)/1230))/1.1 "Montserrat",Arial,Helvetica,sans-serif;margin:0 0 130px}.page-title span{color:#7a18d5}@media (min-width:1550px){.blocks__title{font-size:40px}.nav-header__list li a{font-size:25px}.page-title{font-size:62px}}@media (max-width:992px){.blocks{grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(3,460px)}.nav-header__list li+li{margin-left:50px}.nav-header__submenu-list li+li{margin-left:0;margin-top:15px}}@media (max-width:768px){.blocks,.nav-header.open .nav-header__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.header__block{display:none}.header{padding:30px 40px 25px}.nav-header-burger{display:block;width:30px;height:30px;position:relative;padding:0}.nav-header-burger span,.nav-header.open{display:block;position:absolute;background-color:#7a18d5}.nav-header-burger span{width:20px;height:3px;font-size:0;left:calc(50% - 10px);top:14px}.nav-header-burger::after,.nav-header-burger::before{-webkit-transition:top .2s ease;-o-transition:top .2s ease;transition:top .2s ease;content:"";position:absolute;left:calc(50% - 10px);top:6px;width:20px;height:3px;background-color:#7a18d5}.nav-header-burger::after{top:22px}.nav-header,.nav-header .has-submenu.open+.nav-header__submenu-list a br,.nav-header .has-submenu.open+.nav-header__submenu-list li::after{display:none}.nav-header.open{top:90px;left:0;width:100%}.nav-header.open .nav-header__list{text-align:center}.nav-header.open .nav-header__list li+li{margin-left:0}.nav-header.open .nav-header__list li{padding:25px 0 0}.nav-header.open a{color:#fff}.has-submenu:hover+.nav-header__submenu-list{visibility:hidden!important;opacity:0!important}.nav-header .has-submenu.open+.nav-header__submenu-list{position:initial;width:100%;visibility:visible;opacity:1;background-color:#fff;padding:25px 0}.nav-header .has-submenu.open+.nav-header__submenu-list li{padding:10px 0!important}.nav-header .has-submenu.open+.nav-header__submenu-list li+li{margin-top:0}.nav-header .has-submenu.open+.nav-header__submenu-list a{color:#7a18d5}.nav-header .has-submenu.open+.nav-header__submenu-list li:hover a{color:#c1a9e0}.nav-header .has-submenu{display:inline-block;width:100%;padding-bottom:20px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */